<?xml version='1.1' encoding='UTF-8'?>
<flow-build plugin="workflow-job@1174.vdcb_d054cf74a_">
  <actions>
    <hudson.model.CauseAction>
      <causeBag class="linked-hash-map">
        <entry>
          <hudson.model.Cause_-UserIdCause>
            <userId>dell_user</userId>
          </hudson.model.Cause_-UserIdCause>
          <int>1</int>
        </entry>
      </causeBag>
    </hudson.model.CauseAction>
    <org.jenkinsci.plugins.workflow.libs.LibrariesAction plugin="workflow-cps-global-lib@564.ve62a_4eb_b_e039">
      <libraries/>
    </org.jenkinsci.plugins.workflow.libs.LibrariesAction>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.ExecutionModelAction plugin="pipeline-model-definition@2.2075.vce74e77b_ce40">
      <stagesUUID>2999c948-e575-4627-9f35-e26c6f81a32c</stagesUUID>
      <pipelineDefs>
        <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTPipelineDef plugin="pipeline-model-api@2.2075.vce74e77b_ce40">
          <stages>
            <stages>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                <name>Docker image</name>
                <branches>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                    <name>default</name>
                    <steps>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                        <name>script</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                          <arguments class="linked-hash-map">
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>scriptBlock</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="string">DOCKER_IMAGE = docker.build REGISTRY</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                          </arguments>
                        </args>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                    </steps>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                </branches>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                <name>Pull latest version of Docker image</name>
                <branches>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                    <name>default</name>
                    <steps>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                        <name>script</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                          <arguments class="linked-hash-map">
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>scriptBlock</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="string">docker.withRegistry(&apos;&apos;, REGISTRY_CREDENTIALS) {
                        DOCKER_IMAGE.pull()
                    }</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                          </arguments>
                        </args>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                    </steps>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                </branches>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
            </stages>
            <uuid>2999c948-e575-4627-9f35-e26c6f81a32c</uuid>
          </stages>
          <environment>
            <variables class="linked-hash-map">
              <entry>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                  <key>CUSTOM_WS</key>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                  <value class="string">c:\sindri_automation\sindri_webPortal</value>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
              </entry>
              <entry>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                  <key>REGISTRY</key>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                  <value class="string">nsamardzic/python_selenium_chrome:chrome-91</value>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
              </entry>
              <entry>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                  <key>REGISTRY_CREDENTIALS</key>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                  <value class="string">docker_webPortal_key</value>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
              </entry>
              <entry>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                  <key>DOCKER_IMAGE</key>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                  <value class="string"></value>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
              </entry>
              <entry>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                  <key>DOCKER_CONTAINER</key>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                  <value class="string">sindri_webPortal_chrome</value>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
              </entry>
            </variables>
          </environment>
          <agent>
            <agentType>
              <key>any</key>
            </agentType>
          </agent>
        </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTPipelineDef>
      </pipelineDefs>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.ExecutionModelAction>
    <org.jenkinsci.plugins.workflow.cps.EnvActionImpl plugin="workflow-cps@2683.vd0a_8f6a_1c263">
      <env class="tree-map"/>
    </org.jenkinsci.plugins.workflow.cps.EnvActionImpl>
  </actions>
  <queueId>454</queueId>
  <timestamp>1649011869437</timestamp>
  <startTime>1649011869444</startTime>
  <result>FAILURE</result>
  <duration>2180</duration>
  <charset>UTF-8</charset>
  <keepLog>false</keepLog>
  <execution class="org.jenkinsci.plugins.workflow.cps.CpsFlowExecution">
    <result>FAILURE</result>
    <script>pipeline {
    
    agent any
    
    // agent {
    //     docker { 
    //         image &apos;maven:3-alpine&apos;
    //         // label &apos;my-defined-label&apos;
    //         // args  &apos;-v /tmp:/tmp&apos;
    //     }
    // }
    
    
    environment {
        CUSTOM_WS = &quot;c:\\sindri_automation\\sindri_webPortal&quot;
        REGISTRY = &apos;nsamardzic/python_selenium_chrome:chrome-91&apos;
        REGISTRY_CREDENTIALS = &quot;docker_webPortal_key&quot;
        DOCKER_IMAGE = &apos;&apos;
        DOCKER_CONTAINER = &quot;sindri_webPortal_chrome&quot;
    }
    
    
    stages {
        
        stage(&apos;Docker image&apos;) {
            steps {
                script {
                    DOCKER_IMAGE = docker.build REGISTRY
                }
            }
        }
        
        
        stage(&apos;Pull latest version of Docker image&apos;) {
            steps {
                script {
                    docker.withRegistry(&apos;&apos;, REGISTRY_CREDENTIALS) {
                        DOCKER_IMAGE.pull()
                    }
                }
            }
        }
        
        // stage(&apos;Docker pull&apos;) {
            
        //     steps {
        //         script {
        //             DOCKER_IMAGE.pull()
        //         }
        //     }
            
        // }
        
        
        
        // stage(&apos;Docker init&apos;) {
            
        //     // agent {
        //     //     docker { 
        //     //         // image &apos;maven:3-alpine&apos;
        //     //         image &apos;node:7-alpine&apos;
        //     //     }
        //     // }
            
            
            
        //     steps {
        //         script {
        //             dir(&quot;$env.CUSTOM_WS&quot;) {
        //                 DOCKER_IMAGE.pull()
        //                 // echo &apos;whoami&apos;
        //                 // bat &apos;ls -l&apos;
        //                 // sh (&quot;docker build --rm --build-arg JOB_NAME=${sanitisedJobName()} -t ${containerName()} .&quot;)
        //                 // sh &apos;mvn -B clean faric8:build faric8:deploy verify&apos;
        //                 // dockerImage.run(&quot;--publish 9005:9005 --rm -t --detach --name dcl_container33&quot;)
        //             }
        //         }
        //     }
            
            
            
        // }
        
        
    }
    
    
}</script>
    <loadedScripts class="map"/>
    <durabilityHint>MAX_SURVIVABILITY</durabilityHint>
    <timings class="map">
      <entry>
        <string>flowNode</string>
        <long>330424200</long>
      </entry>
      <entry>
        <string>classLoad</string>
        <long>130388600</long>
      </entry>
      <entry>
        <string>run</string>
        <long>1026235800</long>
      </entry>
      <entry>
        <string>parse</string>
        <long>20496300</long>
      </entry>
      <entry>
        <string>saveProgram</string>
        <long>256324900</long>
      </entry>
    </timings>
    <sandbox>true</sandbox>
    <iota>29</iota>
    <head>1:29</head>
    <done>true</done>
    <resumeBlocked>false</resumeBlocked>
  </execution>
  <completed>true</completed>
  <checkouts class="hudson.util.PersistedList"/>
</flow-build>